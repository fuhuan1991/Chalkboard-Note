{"version":3,"sources":["assets/p1.png","assets/p2.png","main/img/home_page.png","main/img/dashboard.png","main/img/data_management.png","main/img/graph.png","main/img/graph2.png","client.js","util.js","noteManagement/LoginForm.jsx","Notification.js","noteManagement/SignupForm.jsx","noteManagement/NoteForm.jsx","noteManagement/Desktop.jsx","noteManagement/index.jsx","game/Square.jsx","game/Board.tsx","game/Scores.jsx","game/util.ts","game/search.ts","game/auto.ts","game/Game.jsx","main/Main.jsx","index.js","game/config.js"],"names":["module","exports","checkStatus","response","ok","error","Error","statusText","json","then","e","Promise","reject","getJWTFromCookie","result","document","cookie","match","length","isEmpty","obj","key","hasOwnProperty","tagStyle","color","inputStyle","marginBottom","width","display","LoginForm","props","className","initialValues","name","password","validate","values","errors","onSubmit","user","setSubmitting","url","fetch","method","login","o","onSuccess","catch","err","onFailure","touched","handleChange","handleBlur","handleSubmit","isSubmitting","submitForm","isValid","style","onChange","onBlur","value","placeholder","onClick","OnSitchToSignup","marginRight","type","disabled","openNotificationWithIcon","message","description","notification","successNotification","errorNotification","SignupForm","email","s","test","headers","body","JSON","stringify","signup","finally","OnSitchToLogin","marginLeft","position","left","NoteForm","onDelete","userId","noteId","onCancel","onDeleteSuccess","title","note","updateNote","createNote","top","TextArea","flexDirection","okText","cancelText","onConfirm","Desktop","console","log","fetchAllNotes","getUserNotes","res","noteArray","setState","renderNoteArray","map","note_id","openDetailView","bind","target","getNoteInfoById","state","detailView","targetNote","filter","onAddNewNote","this","notes","visible","footer","closable","wrapClassName","Math","random","onLogout","Component","NoteManagement","onLoginSucc","userInfo","jwt","switchToStage","onLoginFail","onSignupSucc","onSignupFail","nextStage","currentStage","Fragment","fontSize","margin","to","Square","degree","floor","squareStyle","available","chess_pieces","handleClick","transform","React","SIZE","config","size","Board","i","j","currentState","currentAvailabeState","index","row","push","renderSquare","rows","generateSquares","winner","number_of_O","number_of_X","handleModeSelection","gameFinished","generateFinishPopup","initialization","generateInitialPopup","generateRows","Scores","n","klass","r","bottom","xNumber","x_number","oNumber","o_number","height","generateCoin","textAlign","m","getRival","player","dirs","Search","SearchForReversiblePieces","x","y","opponent","finalResult","initialTarget","friendly","dir","reversibles","temp","splice","searchAvailable","noMoreMove","Array","fill","availableState","slice","CaculatePoints","points","X","O","pickLocation","possibleMoves","maxValue","finalMove","atCorner","Infinity","atEdge","pos","Game","single","_single","_initialization","initialBoard","initialCurrentState","_currentState","_currentAvailabeState","initialCurrentAvailabeState","_isForX","_numberO","_numberX","_gameFinished","_doubleMove","board","land","autoMove","nextPlayersMoves","currentToken","tempState","finishOrNot","temp_x","temp_y","isXNext","nextPlayersAvailabeState","doubleMove","currentPlayersMoves","resolve","setTimeout","computerMove","tempAvailabe","status","doubleMovePlayer","theOther","window","move","clearBoard","Main","next","carousel","previous","prev","sliderEnter","mouseOverSlide","sliderLeave","createRef","marginTop","onMouseEnter","onMouseLeave","ref","node","src","p0","p1","p2","p3","p4","href","noteImg","gameImg","Root","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.27c3e804.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/p1.28a7a64b.png\";","module.exports = __webpack_public_path__ + \"static/media/p2.4b92592b.png\";","module.exports = __webpack_public_path__ + \"static/media/home_page.e8315dc0.png\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.eccb301b.png\";","module.exports = __webpack_public_path__ + \"static/media/data_management.7dc3208c.png\";","module.exports = __webpack_public_path__ + \"static/media/graph.9d066c1f.png\";","module.exports = __webpack_public_path__ + \"static/media/graph2.d583ef95.png\";","import fetch from 'unfetch';\n\n// check the status of all sort of response\nconst checkStatus = response => {\n  if (response.ok) {\n    return response;\n  } else {\n      let error = new Error(response.statusText);\n      error.response = response;\n      response.json().then(e => {\n        error.error = e;\n      });\n      return Promise.reject(error);\n    }\n}\n\n// export const getAllStudents = () => fetch('/api/students').then(checkStatus);\n\n// export const addNewStudent = student => fetch('api/students', {\n//   headers: {\n//     'Content-Type': 'application/json'\n//   },\n//   method: 'POST',\n//   body: JSON.stringify(student),\n// }).then(checkStatus);\n\n// login\nexport const login = user => {\n  const {name, password} = user;\n  const url = `/api/users/login?name=${name}&password=${password}`;\n  return fetch(url, {\n    method: 'GET',\n  }).then(checkStatus);\n}\n\n// add a new user\nexport const signup = user => fetch('api/users', {\n  headers: {\n    'Content-Type': 'application/json',\n    'Authorization': 'Bearer ' + getJWTFromCookie(),\n  },\n  method: 'POST',\n  body: JSON.stringify(user),\n}).then(checkStatus);\n\n// get all the note of a user\nexport const getUserNotes = userId => fetch(`api/notes/getUserNotes/${userId}`, {\n  method: 'GET'\n}).then(checkStatus);\n\n//update a exsiting note\nexport const updateNote = note => fetch('api/notes', {\n  headers: {\n    'Content-Type': 'application/json',\n    'Authorization': 'Bearer ' + getJWTFromCookie(),\n  },\n  method: 'PUT',\n  body: JSON.stringify(note),\n}).then(checkStatus);\n\n// create a new note\nexport const createNote = note => {\n  const userId = note.userId;\n  return fetch(`api/notes/${userId}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + getJWTFromCookie(),\n    },\n    method: 'POST',\n    body: JSON.stringify(note),\n  }).then(checkStatus);\n}\n\n// delete a exsiting note\nexport const deleteNote = userId => fetch(`api/notes/${userId}`, {\n  method: 'DELETE'\n}).then(checkStatus);\n\nexport const getJWTFromCookie = () => {\n  const result = document.cookie.match(/jwt_token=([^;]*)[;]?/);\n  if (result !== null && result.length >= 2) {\n    return result[1];\n  } else {\n    return '';\n  }\n}\n","export const isEmpty = (obj) => {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key))\n      return false;\n  }\n  return true;\n}\n\nexport const isEmail = (s) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(s);\n\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { Input, Button, Icon } from 'antd';\nimport { login } from '../client.js';\nimport { isEmpty } from '../util.js';\n\nconst tagStyle = { color: '#e2231a'};\nconst inputStyle = { marginBottom: '10px', width: '350px', display: 'block' };\n\nconst LoginForm = (props) => {\n  return (\n    <div>\n      <h1 className='big_title'>Log in</h1>\n      <Formik\n        initialValues={{ \n          name: '',\n          password: '',\n        }}\n        validate={values => {\n          const errors = {};\n\n          if (!values.name) {\n            errors.name = 'name required';\n          }\n\n          if (!values.password) {\n            errors.password = 'password required';\n          }\n\n          return errors;\n        }}\n        onSubmit={(user, { setSubmitting }) => {\n          login(user)\n          .then((o) => { props.onSuccess(o); })\n          .catch(err => { props.onFailure(err); setSubmitting(false);})\n          // .finally(() => { setSubmitting(false); });\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          submitForm,\n          isValid,\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <span className='chalkboard_font'>name:</span> {errors.name && touched.name && <span style={tagStyle}>{errors.name}</span>}\n            <Input\n              style={inputStyle}\n              name=\"name\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.name}\n              placeholder='please insert user name'\n            />\n            \n            <span className='chalkboard_font'>password:</span> {errors.password && touched.password && <span style={tagStyle}>{errors.password}</span>}\n            <Input\n              style={inputStyle}\n              name=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              placeholder='please insert password'\n            />\n            <div>\n              <Button \n                onClick={() => props.OnSitchToSignup()} \n                style={{marginRight: '10px'}}\n              >\n                <Icon type=\"left\" /> Go to Sign up \n              </Button>\n              <Button \n                onClick={() => submitForm()} \n                type=\"primary\" \n                disabled={isSubmitting || isEmpty(touched) || !isValid}\n              >\n                Login <Icon type=\"right\" />\n              </Button>\n            </div>\n          </form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default LoginForm;","import { notification } from 'antd';\n\nconst openNotificationWithIcon = (type, message, description) => {\n  notification[type]({\n    message,\n    description\n  });\n};\n\nexport const successNotification = (message, description) => \n  openNotificationWithIcon('success', message, description);\n\nexport const infoNotification = (message, description) => \n  openNotificationWithIcon('info', message, description);\n\nexport const warningNotification = (message, description) => \n  openNotificationWithIcon('warning', message, description);\n\nexport const errorNotification = (message, description) => \n  openNotificationWithIcon('error', message, description);\n\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { Input, Button, Icon } from 'antd';\nimport { signup } from '../client.js';\nimport { isEmpty, isEmail } from '../util.js';\n\nconst tagStyle = { color: '#e2231a'};\nconst inputStyle = { marginBottom: '10px', width: '350px', display: 'block' };\n\nconst SignupForm = (props) => {\n  return (\n    <div>\n      <h1 className='big_title'>Sign up</h1>\n      <Formik\n        initialValues={{\n          name: '',\n          password: '',\n          email: '',\n        }}\n        validate={values => {\n          const errors = {};\n\n          if (!values.name) {\n            errors.name = 'name required';\n          } else if (values.name.length > 100) {\n            errors.name = 'name should be shorter than 100 characters'\n          }\n\n          if (!values.password) {\n            errors.password = 'password required';\n          } else if (values.password.length > 20) {\n            errors.password = 'password should be shorter than 20 characters'\n          }\n\n          if (!values.email) {\n            errors.email = 'E-mail required';\n          } else if (!isEmail(values.email)) {\n            errors.email = 'invalid E-mail address';\n          } else if (values.email.length > 100) {\n            errors.email = 'email E-mail should be shorter than 100 characters'\n          }\n\n          return errors;\n        }}\n        onSubmit={(user, { setSubmitting }) => {\n          // console.log(user)\n          signup(user)\n            .then(() => { props.onSuccess(); })\n            .catch(err => { props.onFailure(err); })\n            .finally(() => { setSubmitting(false); });\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          submitForm,\n          isValid,\n        }) => (\n            <form onSubmit={handleSubmit}>\n              <span className='chalkboard_font'>name:</span> {errors.name && touched.name && <span style={tagStyle}>{errors.name}</span>}\n              <Input\n                style={inputStyle}\n                name=\"name\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.name}\n                placeholder='please insert user name'\n              />\n              <span className='chalkboard_font'>password:</span> {errors.password && touched.password && <span style={tagStyle}>{errors.password}</span>}\n              <Input\n                style={inputStyle}\n                name=\"password\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n                placeholder='please insert password'\n              />\n              <span className='chalkboard_font'>email:</span> {errors.email && touched.email && <span style={tagStyle}>{errors.email}</span>}\n              <Input\n                style={inputStyle}\n                name=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n                placeholder='please insert email'\n              />\n              <div>\n                <Button\n                  onClick={() => props.OnSitchToLogin()}\n                  style={{ marginRight: '10px' }}\n                >\n                  <Icon type=\"left\" />Go to Login \n                </Button>\n                <Button\n                  onClick={() => submitForm()}\n                  type=\"submit\"\n                  disabled={isSubmitting || isEmpty(touched) || !isValid}\n                >\n                  Sign up<Icon type=\"right\" />\n                </Button>\n              </div>\n            </form>\n          )}\n      </Formik> \n    </div>\n  );\n}\n\nexport default SignupForm;","import React from 'react';\nimport { Formik } from 'formik';\nimport { Input, Button, Popconfirm } from 'antd';\nimport { updateNote, createNote, deleteNote } from '../client';\nimport { isEmpty } from '../util.js';\nimport { errorNotification, successNotification } from '../Notification';\n\nconst tagStyle = { \n  color: '#e2231a', \n  marginLeft: '12px',\n  position: 'absolute',\n  left: '27px',\n};\n\n\nconst NoteForm = (props) => {\n\n  const onDelete = () => {\n    deleteNote(props.noteId)\n      .then(() => { \n        props.onCancel();\n        successNotification('Note Deleted');\n        props.onDeleteSuccess();\n      })\n      .catch(err => { errorNotification('Error') })\n  }\n\n  return (\n    <div className='node_form'>\n      <Formik\n        initialValues={{\n          title: props.title,\n          description: props.description,\n        }}\n        validate={values => {\n          const errors = {};\n\n          if (!values.title) {\n            errors.title = 'title required';\n          } else if (values.title.length > 100) {\n            errors.title = 'title should be shorter than 100 characters';\n          }\n\n          if (!values.description) {\n            errors.description = 'description required';\n          } else if (values.description.length > 1000) {\n            errors.description = 'description should be shorter than 1000 characters';\n          }\n\n          return errors;\n        }}\n        onSubmit={(note, { setSubmitting }) => {\n          if (props.noteId) {\n            // if the component can receive a noteId, then we are modifying an existing note\n            updateNote({ ...note, userId: props.userId, noteId: props.noteId })\n              .then(() => { props.onSuccess(); setSubmitting(false);})\n              .catch(err => { props.onFailure(err); setSubmitting(false);})\n          } else {\n            // else, we are creating a new note\n            createNote({ ...note, userId: props.userId })\n            .then(() => { props.onSuccess(); setSubmitting(false);})\n            .catch(err => { props.onFailure(err); setSubmitting(false);})\n          }\n          \n            // .finally(() => { setSubmitting(false); });\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          submitForm,\n          isValid,\n        }) => (\n            <form onSubmit={handleSubmit} className='inner_form'>\n              <Input\n                // style={inputStyle}\n                name=\"title\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.title}\n                placeholder='please insert title'\n              />\n              {errors.title && touched.title && <span style={{ ...tagStyle, top: '51px' }}>{errors.title}</span>}\n              <Input.TextArea\n                // style={inputStyle}\n                name=\"description\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.description}\n                placeholder='please insert description'\n              />\n              {errors.description && touched.description && <span style={{ ...tagStyle, top: '658px', width: '300px' }}>{errors.description}</span>}\n              <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\n                {props.noteId && \n                <Popconfirm title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\" onConfirm={onDelete}>\n                  <Button\n                    type='danger'\n                    onClick={() => {}}\n                    style={{ marginRight: '10px' }}\n                  >\n                    Delete\n                  </Button>\n                </Popconfirm>}\n                <Button\n                  onClick={() => submitForm()}\n                  type=\"primary\"\n                  style={{ marginRight: '10px' }}\n                  disabled={isSubmitting || (isEmpty(touched) && !props.noteId) || !isValid}\n                >\n                  {props.noteId? 'Update' : 'Save'}\n                </Button>\n                <Button\n                  onClick={() => props.onCancel()}\n                  style={{ marginRight: '10px' }}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </form>\n          )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default NoteForm;","import React, { Component } from 'react';\nimport './style/desktop.scss';\nimport { getUserNotes } from '../client';\nimport { errorNotification, successNotification } from '../Notification';\nimport { Modal, Button, Icon } from 'antd';\nimport NoteForm from './NoteForm';\n\n\nclass Desktop extends Component {\n  constructor(props) {\n    console.log('desktop created')\n    super(props);\n    this.state = {\n      noteArray: [],\n      detailView: false,\n      targetNote: null\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAllNotes(this.props.userId);\n  }\n\n  fetchAllNotes = (userId) => {\n    getUserNotes(userId)\n    .then((res) => {\n      return res.json();\n    })\n    .then((noteArray) => {\n      console.log(noteArray);\n      this.setState({ noteArray });\n    })\n    .catch(err => { errorNotification('error', err.error.message) });\n  }\n\n  renderNoteArray = (noteArray) => {\n    if (noteArray.length === 0) {\n      return <span className='chalkboard_font empty_msg'>No notes</span>\n    } else {\n      return noteArray.map((note) => {\n        return (\n          <div \n            note_id={note.noteId} \n            key={note.noteId} \n            onClick={this.openDetailView.bind(this, note.noteId)}\n            className='note_cell'\n          >\n            <div className='title'>{note.title}</div>\n            <div className='description'>{note.description}</div>\n          </div>\n        )\n      });\n    }\n  }\n\n  openDetailView = (noteId) => {\n    const target = this.getNoteInfoById(this.state.noteArray, noteId);\n    if (target) {\n      this.setState({\n        detailView: true,\n        targetNote: target\n      });\n    } else {\n      console.log('can not get note with id ' + noteId);\n    }\n  }\n\n  getNoteInfoById = (noteArray, noteId) => {\n    const target = noteArray.filter(o => o.noteId === noteId);\n    if (target.length > 0) return target[0];\n    return null;\n  }\n\n  onAddNewNote = () => {\n    this.setState({\n      target: null,\n      targetNote: null,\n      detailView: true,\n    });\n  }\n\n  render() {\n    const notes = this.renderNoteArray(this.state.noteArray);\n\n    return (\n      <div className='desktop'>\n        <Modal\n          visible={this.state.detailView}\n          footer={null}\n          closable={false}\n          width={600}\n          wrapClassName='node_modal'\n        >\n          <NoteForm \n            key={Math.random()}\n            title={this.state.targetNote ? this.state.targetNote.title : ''}\n            description={this.state.targetNote ? this.state.targetNote.description : ''}\n            userId={this.props.userId}\n            noteId={this.state.targetNote ? this.state.targetNote.noteId : ''}\n            onSuccess={() => {\n              this.fetchAllNotes(this.props.userId);\n              successNotification('Note updated');\n              this.setState({\n                detailView: false,\n                targetNote: null\n              });\n            }}\n            onFailure={(error) => {\n              errorNotification('Error')\n            }}\n            onDeleteSuccess={() => {\n              this.fetchAllNotes(this.props.userId);\n              this.setState({\n                detailView: false,\n                targetNote: null\n              });\n            }}\n            onCancel={() => {\n              this.setState({\n                detailView: false,\n                targetNote: null\n              });\n            }}\n          />\n        </Modal>\n        <h1 className='big_title'>Notes</h1>\n        <Button type='primary' onClick={() => this.onAddNewNote()}><Icon type=\"plus-circle\" />Add new note</Button>\n        <div className='note_container'>{notes}</div>\n        <Button type='primary' onClick={() => this.props.onLogout()}><Icon type=\"left\" />log out</Button>\n      </div>\n    );\n  }\n\n}\nexport default Desktop;","import React, { Component } from 'react';\nimport './style/index.scss';\nimport LoginForm from './LoginForm';\nimport { successNotification, errorNotification} from '../Notification';\nimport SignupForm from './SignupForm';\nimport Desktop from './Desktop';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nclass NoteManagement extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentStage: 'LOGIN',\n      userId: '',\n    };\n  }\n\n  componentDidMount() {\n\n  }\n\n  onLoginSucc = (o) => {\n    o.json().then((userInfo) => {\n\n      // store JWT as a cookie\n      document.cookie = `jwt_token=${userInfo.jwt}`;\n\n      // console.log(userInfo)\n      this.setState({ userId: userInfo.userId });\n      successNotification('Login successful', 'Welcom back');\n      this.switchToStage('DESKTOP')();\n    })\n    .catch(() => {errorNotification('Login failed', 'invalid user')});\n  }\n\n  onLoginFail = (e) => {\n    errorNotification('Login failed', e.error.message);\n  }\n\n  onSignupSucc = () => {\n    successNotification('Sign up successful', 'Please log in');\n    this.switchToStage('LOGIN')();\n  }\n\n  onSignupFail = (e) => {\n    console.log(e,e.error)\n    errorNotification('Sign up failed', e.error.message);\n  }\n\n  switchToStage = nextStage => () => {\n    this.setState({\n      currentStage: nextStage,\n    });\n  }\n\n  onLogout = () => {\n    document.cookie = \"jwt_token= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\"\n    this.setState({\n      currentStage: 'LOGIN',\n      userId: '',\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Link style={{fontSize: '24px', margin: '10px'}} to=\"/\">Back</Link>\n        <div className='note_management'>\n          {this.state.currentStage === 'LOGIN' \n            && \n            <LoginForm \n              onSuccess={this.onLoginSucc} \n              onFailure={this.onLoginFail}\n              OnSitchToSignup={this.switchToStage('SIGNUP')}\n            />}\n\n          {this.state.currentStage === 'SIGNUP' \n            && \n            <SignupForm \n              onSuccess={this.onSignupSucc} \n              onFailure={this.onSignupFail}\n              OnSitchToLogin={this.switchToStage('LOGIN')}\n            />}\n          {this.state.currentStage === 'DESKTOP'\n          &&\n          <Desktop \n            userId={this.state.userId}\n            onLogout={this.onLogout}\n          />}\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default NoteManagement;","import React from 'react';\n\nclass Square extends React.Component {\n\n  constructor() {\n    super();\n    this.degree = Math.floor(Math.random()*360);\n  }\n\n  render() {\n    let available = this.props.available;\n    let squareStyle = {};\n    if (available) {\n      squareStyle = 'square available';\n    } else if (this.props.chess_pieces === 'X') {\n      squareStyle = 'square head';\n    } else if (this.props.chess_pieces === 'O') {\n      squareStyle = 'square tail';\n    } else {\n      squareStyle = 'square';\n    }\n\n    return (\n      <button\n        className={squareStyle}\n        onClick={this.props.handleClick}\n      >\n        <div className='inner' style={{transform: `rotate(${this.degree}deg)`}}></div>\n      </button>\n    );\n\n\n  }\n}\n\nexport default Square;","import React from 'react';\nimport Square from './Square';\nimport config from './config.js';\n\nlet SIZE = config.size;\nif (SIZE < 8) {\n\tconsole.log('minium size is 8*8');\n\tSIZE = 8;\n}else if(SIZE > 16) {\n\tconsole.log('maximum size is 16*16');\n\tSIZE = 16;\n}\nif (SIZE%2 !== 0) {\n\tconsole.log('length must be even');\n\tSIZE++;\n}\n\ninterface PropsType {\n  currentState: Array<Array<string | null>>,\n  currentAvailabeState: Array<Array<string|null>>, // the positions that can land a piece\n  gameFinished: boolean, // is the game over\n  initialization: boolean, // is the game in the initial stage\n  number_of_O: number, // number of pieces of O(head)\n  number_of_X: number, // number of pieces of X(tail)\n  handleClick: Function, \n  handleModeSelection: Function,\n}\n\nclass Board extends React.Component<PropsType> {\n\n  renderSquare(i: number, j: number) {\n    return (\n      <Square \n        chess_pieces={this.props.currentState[i][j]} // the peice on that location\n        available={this.props.currentAvailabeState[i][j]} // is this position available\n        handleClick={() => this.props.handleClick(i,j)} \n        key={i*100+j}\n      />\n    );\n  }   \n\n  generateSquares(index: number) {\n    let row = [];\n    for(let i=0; i<=SIZE-1; i++) {\n      row.push(this.renderSquare(index,i));\n    }\n    return row;\n  }\n\n  generateRows() {\n    let rows = [];\n    for(let i=0; i<=SIZE-1; i++) {\n      rows.push(\n        <div className=\"board-row\" key={'R'+i}>\n          {this.generateSquares(i)}\n        </div>\n      );\n    }\n    return rows;\n  }\n\n  generateFinishPopup() {\n    const winner = this.props.number_of_O > this.props.number_of_X ? 'tail' : 'head';\n\n    return(\n      <div className=\"mask\">\n        <div className=\"finish_popup\">\n          <div className={winner}></div>\n          <span>{winner} is the winner!</span>\n        </div>\n      </div>\n    );\n  }\n\n  generateInitialPopup() {\n    return(\n      <div className=\"mask\">\n        <div className=\"finish_popup\">\n          <div className='selection' onClick={() => {this.props.handleModeSelection(true)}}>Single Player</div>\n          <div className='selection' onClick={() => {this.props.handleModeSelection(false)}}>Two Players</div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"board\">\n        {this.props.gameFinished && this.generateFinishPopup()}\n        {this.props.initialization && this.generateInitialPopup()}\n        {this.generateRows()}\n      </div>\n    );\n  }\n}\n\nexport default Board;","import React from 'react';\n\nclass Scores extends React.Component {\n\n  generateCoin (type, n) {\n    const klass = type === 'X' ? 'head' : 'tail';\n    const r = [];\n    let bottom = 60;\n\n    while (n > 0) {\n        r.push(<div className={klass} style={{bottom: bottom + 'px'}} key={bottom}/>);\n        bottom += 10;\n        n--;\n    }\n    return r;\n  }\n\n  render() {\n    const xNumber = this.props.x_number;\n    const oNumber = this.props.o_number;\n\n    return (\n        <div className='scores'>\n            <div style={{ height: '100%', width: '50%'}}>\n                {this.generateCoin('X', xNumber)}\n                <div style={{position: 'absolute', bottom: '0px', width: '80px', textAlign: 'center'}}>{xNumber}</div>\n            </div>\n            <div style={{ height: '100%', width: '50%'}}>\n                {this.generateCoin('O', oNumber)}\n                <div style={{position: 'absolute', bottom: '0px', width: '80px', textAlign: 'center'}}>{oNumber}</div>\n            </div>\n        </div>\n    );\n\n\n  }\n}\n\nexport default Scores;","const m:{ [key: string]: string; } = {\n    'X': 'O',\n    'O': 'X',\n    'head': 'tail',\n    'tail': 'head',\n}\nexport const getRival = (player: string) => {\n    return m[player];\n}","import config from './config.js';\nimport { getRival } from './util';\n\ntype coor = Array<number>; \n\nlet SIZE = config.size;\nif (SIZE < 8) {\n  console.log('最小尺寸为8*8');\n  SIZE = 8;\n} else if (SIZE > 16) {\n  console.log('最大尺寸为16*16');\n  SIZE = 16;\n}\nif (SIZE % 2 !== 0) {\n  console.log('期盼尺寸必须为偶数');\n  SIZE++;\n}\n\nconst dirs = [[0, 1], [0, -1], [1, 0], [-1, 0], [1, 1], [1, -1], [-1, 1], [-1, -1]];\n\nexport const isInBoundary = (o: Array<number>) => {\n\tif (o[0] < 0 || o[0] >= SIZE) return false;\n\tif (o[1] < 0 || o[1] >= SIZE) return false;\n\treturn true;\n}\n\nvar Search = {\n\t// search for the pieces that can be reversed by current move\n  SearchForReversiblePieces: (x: number, y: number, opponent: string, currentState: Array<Array<string|null>>) => {\n    const finalResult: Array<coor> = [];\n    const initialTarget = [x, y];\n    const friendly = getRival(opponent);\n  \n    for (let dir of dirs) {\n      const target = [...initialTarget];\n      const reversibles: Array<coor> = [];\n      const temp = [];\n      target[0] += dir[0];\n      target[1] += dir[1];\n  \n      while (isInBoundary(target)) {\n        // console.log(target)\n        if (currentState[target[0]][target[1]] === null) {\n          break;\n        } else if (currentState[target[0]][target[1]] === friendly) {\n          reversibles.splice(reversibles.length, 0, ...temp);\n          break;\n        } else {\n          // encounter a opponent's piece\n          // console.log('target', target)\n          temp.push([...target]);\n        }\n        target[0] += dir[0];\n        target[1] += dir[1];\n      }\n  \n      finalResult.splice(finalResult.length, 0, ...reversibles);\n    }\n    return finalResult;\n  },\n\n\tsearchAvailable:function(opponent: string, currentState: Array<Array<string|null>>){//搜索全部的方格，找出其中可以落子方格。\n// console.log('searchAvailable', opponent)\n\t\tlet noMoreMove = true;\n\n\t\tlet temp = Array(SIZE).fill(null);\n\t  \tlet availableState = [];\n\t  \tfor (let i=0; i<=SIZE-1; i++){\n\t  \t\tavailableState[i] = temp.slice(0);\n\t  \t}\n\n\t\tfor (let i = SIZE - 1; i >= 0; i--) {\n\t\t\tfor (let j = SIZE - 1; j >= 0; j--) {\n        let result = this.SearchForReversiblePieces(i,j,opponent,currentState);\n        if (result.length > 0 && !currentState[i][j]) {\n          availableState[i][j] = true;\n\t\t\t\t\tnoMoreMove = false;\n        }\n\t\t\t};\n\t\t};\n\n\t\treturn {\n\t\t\tavailableState: availableState,\n\t\t\tnoMoreMove: noMoreMove\n\t\t};\n\t},\n\n\tCaculatePoints:function(currentState: Array<Array<string|null>>){\n\t\tlet points = {\n\t\t\tX: 0,\n\t\t\tO: 0\n\t\t};\n\n\t\tfor (let i = SIZE - 1; i >= 0; i--) {\n\t\t\tfor (let j = SIZE - 1; j >= 0; j--) {\n\t\t\t\tif(currentState[i][j]==='X'){ points.X++; }\n\t\t\t\tif(currentState[i][j]==='O'){ points.O++; }\n\t\t\t};\n\t\t};\n\n\t\treturn points;\n\t}, \n};\n\nexport default Search; ","import config from './config.js';\nimport { getRival } from './util';\nimport Search from './search';\n\ntype coor = Array<number>;\n\nlet SIZE = config.size;\nif (SIZE < 8) {\n  console.log('最小尺寸为8*8');\n  SIZE = 8;\n} else if (SIZE > 16) {\n  console.log('最大尺寸为16*16');\n  SIZE = 16;\n}\nif (SIZE % 2 !== 0) {\n  console.log('期盼尺寸必须为偶数');\n  SIZE++;\n}\n\nexport const pickLocation = (opponent: string, currentState: Array<Array<string | null>>) => {\n  const possibleMoves: Array<{value: number, pos: coor}> = [];\n  let maxValue: number = 0;\n  let finalMove: coor|null= null;\n\n\n  for (let i = SIZE - 1; i >= 0; i--) {\n    for (let j = SIZE - 1; j >= 0; j--) {\n      let result = Search.SearchForReversiblePieces(i, j, opponent, currentState);\n      if (result.length > 0 && !currentState[i][j]) {\n        let value = result.length;\n\n        if (atCorner(i, j)) {\n          value = Infinity;\n        } else if (atEdge(i, j)){\n          value = value * 2;\n        }\n\n        if (value > maxValue) {\n          finalMove = [i, j];\n          maxValue = value;\n        }\n\n        possibleMoves.push({\n          pos: [i, j],\n          value: value,\n        });\n      }\n    };\n  };\n  // console.log(possibleMoves);\n  return finalMove;\n}\n\nconst atCorner = (x: number, y: number) => {\n  if (x === 0 && y === 0) return true;\n  if (x === 0 && y === SIZE-1) return true;\n  if (x === SIZE-1 && y === 0) return true;\n  if (x === SIZE-1 && y === SIZE-1) return true;\n  return false;\n}\n\nconst atEdge = (x: number, y: number) => {\n  if (x === 0) return true;\n  if (x === SIZE-1) return true;\n  if (y === 0) return true;\n  if (y === SIZE-1) return true;\n  return false;\n}","\nimport React from 'react';\nimport './style/game.scss';\nimport Board from './Board.tsx';\nimport Scores from './Scores.jsx';\nimport Search from './search';\nimport config from './config.js';\nimport { pickLocation } from './auto';\nimport { getRival } from './util';\n\nlet SIZE = config.size;\nif (SIZE < 8) {\n\tconsole.log('minium size is 8*8');\n\tSIZE = 8;\n}else if(SIZE > 16) {\n\tconsole.log('maximum size is 16*16');\n\tSIZE = 16;\n}\nif (SIZE%2 !== 0) {\n\tconsole.log('length must be even');\n\tSIZE++;\n}\n\nclass Game extends React.Component {\n  initialCurrentState() {\n  \tlet temp = Array(SIZE).fill(null);\n  \tlet board = [];\n  \tfor (let i=0; i<=SIZE-1; i++){\n  \t\tboard[i] = temp.slice(0);\n  \t}\n  \t// initialize 4 pieces (X is head)\n    board[SIZE/2 - 1][SIZE/2 - 1] = 'X';\n    board[SIZE/2 - 1][SIZE/2] = 'O';\n    board[SIZE/2][SIZE/2 - 1] = 'O';\n    board[SIZE/2][SIZE/2] = 'X'; \n\n    // board[7][7] = 'O';\n    // board[0][0] = 'X';\n    // board[0][1] = 'O';\n    // board[0][7] = 'X';\n    // board[1][7] = 'O';\n    // board[0][2] = 'O';\n    // board[7][6] = 'X';\n    return board;\n  }\n\n  initialCurrentAvailabeState(initialBoard) {\n    let temp = Array(SIZE).fill(null);\n  \tlet board = [];\n  \tfor (let i=0; i<=SIZE-1; i++){\n  \t\tboard[i] = temp.slice(0);\n  \t}\n\n    const { availableState } = Search.searchAvailable('X', initialBoard);\n    for (let i = 0; i <= SIZE-1; i++) {\n      for (let j = 0; j <= SIZE-1; j++) {\n        if (availableState[i][j]) board[i][j] = true;\n      }\n    }\n\n    return board;\n  }\n\n  constructor(props) {\n    super(props);\n    const initialBoard = this.initialCurrentState();\n    this.state = {\n      _initialization: true,\n      _single: true,\n      _currentState: initialBoard, // current location\n      _currentAvailabeState: this.initialCurrentAvailabeState(initialBoard), // available locations\n      _isForX: false, // is current piece a X? \n      _numberO: 2, // the number of Os\n      _numberX: 2, // the number of Xs\n      _gameFinished: false,\n      _doubleMove: false\n    };\n  }\n\n  handleClick(x,y) { \n    // cannot place a piece on another one\n    if (this.state._currentState[x][y]){\n      console.log('occupied!');\n      return false;\n    } else if(this.state._gameFinished){\n      // cannot place a piece outside available zone\n      console.log('game is over!');\n      return false;\n    } else if(this.state._isForX && this.state._single) {\n      // in single mode, human player is (O)tail\n      console.log('not your turn!');\n      return false;\n    }\n    if (this.state._currentAvailabeState[x][y]) this.land(x, y, this.state._single); \n  }\n  // put down a piece and change state\n  land (x, y, autoMove) {\n    let currentToken = this.state._isForX? 'X' : 'O';\n    let opponent = this.state._isForX? 'O':'X';\n    let tempState = this.state._currentState; // copy current board\n    let result = {};\n    let nextPlayersMoves = {};\n    let points = {};\n    let finishOrNot = false;\n\n    result = Search.SearchForReversiblePieces(x, y, opponent, tempState);\n    // change board state, record the current move\n    tempState[x][y] = currentToken;\n\n    // change board state, reverse opponent's pieces\n    for (let i = result.length - 1; i >= 0; i--) {\n      let temp_x = result[i][0];\n      let temp_y = result[i][1];\n      tempState[temp_x][temp_y] = currentToken;\n    };\n\n    // calculate the available locations for next player\n    nextPlayersMoves = Search.searchAvailable(currentToken, tempState);\n    // count piece numbers\n    points = Search.CaculatePoints(tempState);\n\n    // inverse side\n    let isXNext = !this.state._isForX;\n    let nextPlayersAvailabeState = nextPlayersMoves.availableState;\n    let doubleMove = false;\n\n    // check finish\n    if( (points.X + points.O) === 64){\n      // board full\n      finishOrNot = true;\n      autoMove = false;\n    } else if( nextPlayersMoves.noMoreMove ){\n      const currentPlayersMoves = Search.searchAvailable(getRival(currentToken), tempState);\n      if (currentPlayersMoves.noMoreMove) {\n        // both player cannot make any move, game over\n        finishOrNot = true;\n        autoMove = false;\n      } else {\n        // player 1 make a move, player 2 cannot move, but player 1 can move again\n        if (this.state._single) {\n          if (this.state._isForX) {\n            console.log('computer double move')\n            autoMove = true;\n            isXNext = this.state._isForX;\n            nextPlayersAvailabeState = currentPlayersMoves.availableState;\n            doubleMove = true;\n          } else {\n            console.log('human double move');\n            autoMove = false;\n            isXNext = this.state._isForX;\n            nextPlayersAvailabeState = currentPlayersMoves.availableState;\n            doubleMove = true;\n          }\n        } else {\n          isXNext = this.state._isForX;\n          nextPlayersAvailabeState = currentPlayersMoves.availableState;\n          doubleMove = true;\n        }\n      }\n    }\n\n    if (autoMove) {\n      const p = new Promise((resolve, reject) => {\n        setTimeout(() => resolve(), 1000);\n      });\n      p.then(()=>{\n        this.computerMove();\n      });\n    }\n\n\n    // change state\n    this.setState({\n      _currentState: tempState,\n      _currentAvailabeState: nextPlayersAvailabeState,\n      _isForX: isXNext,\n      _numberO: points.O,\n      _numberX: points.X,\n      _gameFinished: finishOrNot,\n      _doubleMove: doubleMove,\n    });\n  }\n\n  clearBoard(){\n    let tempState = this.initialCurrentState();\n    let tempAvailabe = this.initialCurrentAvailabeState(tempState);\n\n    this.setState({\n      _initialization: true,\n      _single: true,\n      _currentState: tempState,\n      _currentAvailabeState: tempAvailabe,\n      _isForX: false,\n      _numberO: 2,\n      _numberX: 2,\n      _gameFinished: false\n    });\n  }\n\n  handleModeSelection = (single) => {\n    this.setState({\n      _single: single,\n      _initialization: false,\n    });\n  }\n\n  computerMove() {\n    const pos = pickLocation('O', this.state._currentState);\n    this.land(pos[0], pos[1], false);\n  }\n\n  render() {\n    let nextPlayer = \"\";\n    let status = \"\";\n\n    if (this.state._gameFinished){\n      if (this.state._numberO > this.state._numberX){\n        status = \"winner is tail!\";\n      } else if ( this.state._numberO < this.state._numberX ){\n        status = \"winner is head!\";\n      } else {\n        status = \"want a second round?\";\n      }\n    } else if (this.state._doubleMove) {\n      const doubleMovePlayer = this.state._isForX? \"head\" : \"tail\";\n      const theOther = this.state._isForX? \"tail\" : \"head\";\n      status = `${theOther} has no moves, so ${doubleMovePlayer} moves again.`;\n    } else{\n      nextPlayer = this.state._isForX? \"head\" : \"tail\";\n      status = \"Current player: \" + nextPlayer;\n    }\n\n    ///////test////////////////////////////////////\n    window.move = () => {\n      const pos = pickLocation('O', this.state._currentState);\n      this.land(pos[0], pos[1], false);\n    }\n\n    ///////////////////////////////////////////////\n\n    return (\n      <React.Fragment>\n        <div className=\"status white_font\" >\n          If you play alone, you play as tail and you move first, computer play as head.\n        </div>\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <div className=\"status white_font\" style={{display: 'inline-block'}}>{status}</div>\n            <span className={this.state._isForX? 'coin_icon head' : 'coin_icon tail'}></span>\n            <Board \n              initialization = {this.state._initialization}\n              currentState={this.state._currentState} \n              currentAvailabeState={this.state._currentAvailabeState}\n              gameFinished = {this.state._gameFinished}  \n              number_of_O = {this.state._numberO}\n              number_of_X = {this.state._numberX}   \n              handleClick={(i,j) => this.handleClick(i,j)}\n              handleModeSelection={this.handleModeSelection} \n            />\n            <Scores x_number={this.state._numberX} o_number={this.state._numberO} />\n            <div className=\"status white_font\">number of \"tail\"s: {this.state._numberO}</div>\n            <div className=\"status white_font\">number of \"head\"s: {this.state._numberX}</div>\n          </div>\n          <button className='clear' onClick={() => this.clearBoard()}>RESET</button>\n        </div>\n      </React.Fragment>\n    );\n  }\n};\n\nexport default Game; ","import React, { Component } from 'react';\nimport './main.css';\nimport NoteManagement from '../noteManagement/index.jsx';\nimport Game from '../game/Game.jsx';\nimport { Carousel, Icon } from 'antd';\nimport gameImg from '../assets/p1.png';\nimport noteImg from '../assets/p2.png';\nimport p0 from './img/home_page.png';\nimport p1 from './img/dashboard.png';\nimport p2 from './img/data_management.png';\nimport p3 from './img/graph.png';\nimport p4 from './img/graph2.png';\nimport {\n  HashRouter as Router,\n  Link\n} from \"react-router-dom\";\n\nclass Main extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      mouseOverSlide: false,\n    };\n    this.carousel = React.createRef();\n  }\n\n  componentDidMount() {\n\n  }\n\n  next = () => {\n    this.carousel.next();\n  }\n  previous = () => {\n    this.carousel.prev();\n  }\n\n  sliderEnter = () => {\n    this.setState({mouseOverSlide: true});\n  }\n\n  sliderLeave = () => {\n    this.setState({mouseOverSlide: false});\n  }\n\n  render () {\n    return (\n      <div className='main'>\n        <h1 className='white_font' \n          style={{textAlign: 'center', marginTop: '40px'}}>\n            Hello, my name is Huan.\n        </h1>\n        <h1 className='white_font' \n          style={{textAlign: 'center'}}>\n            I am a programmer.\n        </h1>\n        <h1 className='white_font' style={{marginBottom: '0px'}}>ABOUT ME</h1>\n        <hr className='line'/>\n        <p className='white_font'>\n          I am a master’s student in computer science at Tufts and am very passionate in applying\n          programing skills to create better experience for users. This semester, I am building a\n          mobile attendance system for faculties based on android system.I have 2-year full time \n          working experience as a front-end engineer before joining Tufts\n          this year. I have tackled complex technical problems and demonstrated strong programming \n          skills at Lenovo and GrowingIO.\n        </p>\n\n        <h1 className='white_font' style={{marginBottom: '0px'}}>PROJECTS</h1>\n        <hr className='line'/>\n\n        <h1 className='white_font'>1. GrowingIO.com</h1>\n        <div className='slider' onMouseEnter={this.sliderEnter} onMouseLeave={this.sliderLeave}>\n          <Carousel ref={node => (this.carousel = node)}>\n            <img src={p0}></img>\n            <img src={p1}></img>\n            <img src={p2}></img>\n            <img src={p3}></img>\n            <img src={p4}></img>\n          </Carousel>\n          <div className={this.state.mouseOverSlide? 'arrowLeft' : 'arrowLeft hide'} onClick={this.previous}>\n            <Icon type=\"left\" style={{ fontSize: 24, margin: '8px', color: 'white' }}/>\n          </div>\n          <div className={this.state.mouseOverSlide? 'arrowRight' : 'arrowRight hide'} onClick={this.next}>\n            <Icon type=\"right\" style={{ fontSize: 24, margin: '8px', color: 'white' }}/>\n          </div>\n        </div>\n        <h2 className='white_font'>About this project</h2>\n        <hr className='line'/>\n        <p className='white_font'>\n          GrowingIO is a leading analytic platform provider in China. They help customer track data, building \n          dashboard and drive quick insights. I was part of the platform team and our goal is to ensure that \n          users (enterprise user) can manage their data easily.&nbsp;&nbsp;\n          <a className='info_link' href='https://www.growingio.com/'>Visit this site</a><br/>\n          My role in the team:<br/>\n        </p>\n          <ul className='list'>\n            <li>Designed a new data management module.</li>\n            <li>Refactored old react components to improve cohesion</li>\n            <li>Developed a react component library for company’s common components.</li>\n          </ul>\n        <h2 className='white_font' style={{marginBottom: '0px'}}>Technical Sheet</h2>\n        <p className='white_font'>Code technologies involved while developing this project.</p>\n        <hr className='line'/>\n        <ul className='list'>\n          <li>React</li>\n          <li>Redux</li>\n          <li>RxJS</li>\n          <li>Node.js</li>\n          <li>Javascript ES6 & Typescript</li>\n          <li>CSS3 & less</li>\n          <li>Webpack</li>\n        </ul>\n\n\n\n        <h1 className='white_font'>2. Chalkboard Note &nbsp;<Link to=\"/note\">Try it</Link></h1>\n        <img src={noteImg}></img>\n        <h2 className='white_font'>About this project</h2>\n        <hr className='line'/>\n        <p className='white_font'>\n          This is a online note management app, you can create, store and modify your notes.<br />\n          There is a default account with some existing notes, name: guest, password: 123.<br />\n        </p>\n        <h2 className='white_font' style={{marginBottom: '0px'}}>Technical Sheet</h2>\n        <p className='white_font'>Code technologies involved while developing this project.</p>\n        <hr className='line'/>\n        <ul className='list'>\n          <li>React</li>\n          <li>Javascript ES6</li>\n          <li>CSS3</li>\n          <li>Spring Boot</li>\n          <li>Spring Scurity</li>\n          <li>JWT</li>\n          <li>PostgreSQL</li>\n          <li>Docker</li>\n          <li>AWS</li>\n        </ul>\n\n\n\n\n        <h1 className='white_font'>3. Reversi Game &nbsp;<Link to=\"/game\">Try it</Link></h1>\n        <img src={gameImg}></img>\n        <h2 className='white_font'>About this project</h2>\n        <hr className='line'/>\n        <p className='white_font'>\n          This is a little game like Reversi. Players take turns placing disks on the board \n          with their assigned color facing up. During a play, any disks of the opponent's color\n          that are in a straight line and bounded by the disk just placed and another disk of the \n          current player's color are turned over to the current player's color.\n          The object of the game is to have the majority of disks turned to display your color when \n          the last playable empty square is filled.&nbsp;&nbsp;\n          <a className='info_link' href='https://en.wikipedia.org/wiki/Reversi'>What is Reversi?</a>\n        </p>\n        <h2 className='white_font' style={{marginBottom: '0px'}}>Technical Sheet</h2>\n        <p className='white_font'>Code technologies involved while developing this project.</p>\n        <hr className='line'/>\n        <ul className='list'>\n          <li>React</li>\n          <li>Javascript ES6/TypeScript</li>\n          <li>CSS3/Sass</li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default Main;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport Main from './main/Main';\nimport Game from './game/Game';\nimport NoteManagement from './noteManagement/index';\n// import * as serviceWorker from './serviceWorker';\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nconst Root = \n    <Router>\n        <Switch>\n            <Route exact path=\"/\">\n                <Main />\n            </Route>\n            <Route path=\"/game\">\n                <Game />\n            </Route>\n            <Route path=\"/note\">\n                <NoteManagement />\n            </Route>\n        </Switch>\n    </Router>;\n\nReactDOM.render(Root, document.getElementById('root'));\n\ndocument.title = 'My Website';\n","module.exports = {\n\tsize: 8\n}"],"sourceRoot":""}