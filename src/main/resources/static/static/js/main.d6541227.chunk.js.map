{"version":3,"sources":["client.js","util.js","noteManagement/LoginForm.jsx","Notification.js","noteManagement/SignupForm.jsx","noteManagement/NoteForm.jsx","noteManagement/EventForm.jsx","noteManagement/Meter.jsx","noteManagement/Desktop.jsx","noteManagement/index.jsx","index.js"],"names":["checkStatus","response","ok","error","Error","statusText","json","then","e","Promise","reject","moment","require","isEmpty","obj","key","hasOwnProperty","getCookie","name","cookieArr","document","cookie","split","i","length","cookiePair","trim","decodeURIComponent","stringToMoment","timeStr","compareTimeString","a","b","time","tagStyle","color","fontSize","inputStyle","marginBottom","width","display","LoginForm","props","className","initialValues","password","validate","values","errors","onSubmit","user","setSubmitting","url","fetch","method","login","o","onSuccess","catch","err","onFailure","touched","handleChange","handleBlur","handleSubmit","isSubmitting","submitForm","isValid","style","onChange","onBlur","value","placeholder","type","onClick","OnSitchToSignup","marginRight","disabled","openNotificationWithIcon","message","description","notification","successNotification","errorNotification","SignupForm","email","s","indexOf","test","headers","body","JSON","stringify","signup","finally","OnSitchToLogin","marginLeft","position","left","NoteForm","onDelete","noteId","onCancel","onDeleteSuccess","useState","setFontSize","title","note","updateNote","userId","createNote","top","TextArea","flexDirection","okText","cancelText","onConfirm","EventForm","eventId","event","updateEvent","createEvent","setFieldValue","momentObj","showTime","str","format","momentToString","Meter","targetArray","eventArray","d","start","end","add","filter","isBefore","isAfter","getEventInRange","this","range","now","totalSeconds","points","startText","endText","m","offset","diff","percentage","Math","floor","push","content","trigger","placement","Component","Desktop","fetchAllNotes","getUserNotes","res","noteArray","console","log","setState","fetchAllEvents","getUserEvents","renderNoteArray","map","note_id","openDetailNoteView","bind","target","getNoteInfoById","state","detailNoteView","targetNote","openDetailEventView","getEventInfoById","detailEventView","targetEvent","onAddNewNote","onAddNewEvent","renderEventArray","sort","event_id","notes","events","userName","onLogout","visible","footer","closable","wrapClassName","random","NoteManagement","onLoginSucc","userInfo","jwt","switchToStage","onLoginFail","onSignupSucc","onSignupFail","nextStage","currentStage","checkToken","Fragment","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d6541227.chunk.js","sourcesContent":["import fetch from 'unfetch';\n\n// check the status of all sort of response\nconst checkStatus = response => {\n  if (response.ok) {\n    return response;\n  } else {\n      let error = new Error(response.statusText);\n      error.response = response;\n      response.json().then(e => {\n        error.error = e;\n      });\n      return Promise.reject(error);\n    }\n}\n\n// login\nexport const login = user => {\n  const {name, password} = user;\n  const url = `/api/users/login?name=${name}&password=${password}`;\n  return fetch(url, {\n    method: 'GET',\n  }).then(checkStatus);\n}\n\n// add a new user\nexport const signup = user => fetch('api/users', {\n  headers: {\n    'Content-Type': 'application/json',\n    // 'Authorization': 'Bearer ' + getJWTFromCookie(),\n  },\n  method: 'POST',\n  body: JSON.stringify(user),\n}).then(checkStatus);\n\n// get all the notes of a user\nexport const getUserNotes = userId => fetch(`api/notes/getUserNotes/${userId}`, {\n  method: 'GET'\n}).then(checkStatus);\n\n// get all the events of a user\nexport const getUserEvents = userId => fetch(`api/events/getUserEvents/${userId}`, {\n  method: 'GET'\n}).then(checkStatus);\n\n//update a exsiting note\nexport const updateNote = note => fetch('api/notes', {\n  headers: {\n    'Content-Type': 'application/json',\n    // 'Authorization': 'Bearer ' + getJWTFromCookie(),\n  },\n  method: 'PUT',\n  body: JSON.stringify(note),\n}).then(checkStatus);\n\n//update a exsiting event\nexport const updateEvent = event => fetch('api/events', {\n  headers: {\n    'Content-Type': 'application/json',\n    // 'Authorization': 'Bearer ' + getJWTFromCookie(),\n  },\n  method: 'PUT',\n  body: JSON.stringify(event),\n}).then(checkStatus);\n\n// create a new note\nexport const createNote = note => {\n  const userId = note.userId;\n  return fetch(`api/notes/${userId}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      // 'Authorization': 'Bearer ' + getJWTFromCookie(),\n    },\n    method: 'POST',\n    body: JSON.stringify(note),\n  }).then(checkStatus);\n}\n\n// create a new event\nexport const createEvent = event => {\n  const userId = event.userId;\n  return fetch(`api/events/${userId}`, {\n    headers: {\n      'Content-Type': 'application/json',\n      // 'Authorization': 'Bearer ' + getJWTFromCookie(),\n    },\n    method: 'POST',\n    body: JSON.stringify(event),\n  }).then(checkStatus);\n}\n\n// delete a exsiting note\nexport const deleteNote = noteId => fetch(`api/notes/${noteId}`, {\n  method: 'DELETE'\n}).then(checkStatus);\n\n// delete a exsiting event\nexport const deleteEvent = eventId => fetch(`api/events/${eventId}`, {\n  method: 'DELETE'\n}).then(checkStatus);\n\nexport const getJWTFromCookie = () => {\n  const result = document.cookie.match(/jwt_token=([^;]*)[;]?/);\n  if (result !== null && result.length >= 2) {\n    return result[1];\n  } else {\n    return '';\n  }\n}\n\n// check if a jwt is still valid\nexport const checkToken = (name, jwt) => fetch(`api/users/check?name=${name}&jwt=${jwt}`, {\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  method: 'GET'\n}).then(checkStatus);","// import { moment } from 'moment';\nconst moment = require('moment');\n\nexport const isEmpty = (obj) => {\n  for (var key in obj) {\n    if (obj.hasOwnProperty(key))\n      return false;\n  }\n  return true;\n}\n\nexport const isEmail = (s) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(s);\n\nexport function getCookie(name) {\n  // Split cookie string and get all individual name=value pairs in an array\n  var cookieArr = document.cookie.split(\";\");\n  \n  // Loop through the array elements\n  for(var i = 0; i < cookieArr.length; i++) {\n      var cookiePair = cookieArr[i].split(\"=\");\n      \n      /* Removing whitespace at the beginning of the cookie name\n      and compare it with the given string */\n      if(name === cookiePair[0].trim()) {\n          // Decode the cookie value and return\n          return decodeURIComponent(cookiePair[1]);\n      }\n  }\n  \n  // Return null if not found\n  return null;\n}\n\nexport const momentToString = (obj) => {\n  if(obj === null) return '';\n  return obj.format(\"YYYY-MM-DD HH:mm:ss\");\n}\n\nexport const stringToMoment = (timeStr) => {\n  if (timeStr === '') return null;\n  return moment(timeStr);\n}\n\nexport const compareTimeString = (a, b) => {\n  if (a.time >= b.time) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n\nexport const getEventInRange = (eventArray, d) => {\n  if (!eventArray) return [];\n  const start = moment();\n  const end = moment().add(d, 'days');\n\n  return eventArray.filter((event) => {\n    const timeStr = event.time;\n    const obj = moment(timeStr);\n    if (obj.isBefore(end) && obj.isAfter(start)) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n}\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { Input, Button, Icon } from 'antd';\nimport { login } from '../client.js';\nimport { isEmpty } from '../util.js';\n\nconst tagStyle = { color: '#e2231a', fontSize: '17px'};\nconst inputStyle = { marginBottom: '10px', width: '350px', display: 'block' };\n\nconst LoginForm = (props) => {\n  return (\n    <div>\n      <h1 className='big_title'>Log in</h1>\n      <Formik\n        initialValues={{ \n          name: '',\n          password: '',\n        }}\n        validate={values => {\n          const errors = {};\n\n          if (!values.name) {\n            errors.name = 'Name required';\n          }\n\n          if (!values.password) {\n            errors.password = 'Password required';\n          }\n          return errors;\n        }}\n        onSubmit={(user, { setSubmitting }) => {\n          login(user)\n          .then((o) => { props.onSuccess(o); })\n          .catch(err => { props.onFailure(err); setSubmitting(false);})\n          // .finally(() => { setSubmitting(false); });\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          submitForm,\n          isValid,\n        }) => (\n          <form onSubmit={handleSubmit}>\n            <span className='chalkboard_font'>name:</span> {errors.name && touched.name && <span style={tagStyle}>{errors.name}</span>}\n            <Input\n              style={inputStyle}\n              name=\"name\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.name}\n              placeholder='please insert user name'\n            />\n            \n            <span className='chalkboard_font'>password:</span> {errors.password && touched.password && <span style={tagStyle}>{errors.password}</span>}\n            <Input\n              style={inputStyle}\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              placeholder='please insert password'\n            />\n            <div>\n              <Button \n                onClick={() => props.OnSitchToSignup()} \n                style={{marginRight: '10px'}}\n              >\n                <Icon type=\"left\" /> Go to Sign up \n              </Button>\n              <Button \n                onClick={() => submitForm()} \n                type=\"primary\" \n                disabled={isSubmitting || isEmpty(touched) || !isValid}\n              >\n                Login <Icon type=\"right\" />\n              </Button>\n            </div>\n          </form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default LoginForm;","import { notification } from 'antd';\n\nconst openNotificationWithIcon = (type, message, description) => {\n  notification[type]({\n    message,\n    description\n  });\n};\n\nexport const successNotification = (message, description) => \n  openNotificationWithIcon('success', message, description);\n\nexport const infoNotification = (message, description) => \n  openNotificationWithIcon('info', message, description);\n\nexport const warningNotification = (message, description) => \n  openNotificationWithIcon('warning', message, description);\n\nexport const errorNotification = (message, description) => \n  openNotificationWithIcon('error', message, description);\n\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { Input, Button, Icon } from 'antd';\nimport { signup } from '../client.js';\nimport { isEmpty, isEmail } from '../util.js';\n\nconst tagStyle = { color: '#e2231a', fontSize: '17px'};\nconst inputStyle = { marginBottom: '10px', width: '350px', display: 'block' };\n\nconst SignupForm = (props) => {\n  return (\n    <div>\n      <h1 className='big_title'>Sign up</h1>\n      <Formik\n        initialValues={{\n          name: '',\n          password: '',\n          email: '',\n        }}\n        validate={values => {\n          const errors = {};\n\n          if (!values.name) {\n            errors.name = 'Name required';\n          } else if (values.name.length > 80) {\n            errors.name = 'Name should be shorter than 80 characters'\n          }\n\n          if (!values.password) {\n            errors.password = 'Password required';\n          } else if (values.password.length > 18) {\n            errors.password = 'Password should be shorter than 18 characters'\n          } else if (values.password.indexOf(' ') > -1) {\n            errors.password = 'No space is allowed in password';\n          }\n\n          if (!values.email) {\n            errors.email = 'E-mail required';\n          } else if (!isEmail(values.email)) {\n            errors.email = 'invalid E-mail address';\n          } else if (values.email.length > 100) {\n            errors.email = 'E-mail should be shorter than 100 characters'\n          }\n\n          return errors;\n        }}\n        onSubmit={(user, { setSubmitting }) => {\n          // console.log(user)\n          signup(user)\n            .then(() => { props.onSuccess(); })\n            .catch(err => { props.onFailure(err); })\n            .finally(() => { setSubmitting(false); });\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          submitForm,\n          isValid,\n        }) => (\n            <form onSubmit={handleSubmit}>\n              <span className='chalkboard_font'>name:</span> {errors.name && touched.name && <span style={tagStyle}>{errors.name}</span>}\n              <Input\n                style={inputStyle}\n                name=\"name\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.name}\n                placeholder='please insert user name'\n              />\n              <span className='chalkboard_font'>password:</span> {errors.password && touched.password && <span style={tagStyle}>{errors.password}</span>}\n              <Input\n                style={inputStyle}\n                name=\"password\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n                placeholder='please insert password'\n              />\n              <span className='chalkboard_font'>email:</span> {errors.email && touched.email && <span style={tagStyle}>{errors.email}</span>}\n              <Input\n                style={inputStyle}\n                name=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n                placeholder='please insert email'\n              />\n              <div>\n                <Button\n                  onClick={() => props.OnSitchToLogin()}\n                  style={{ marginRight: '10px' }}\n                >\n                  <Icon type=\"left\" />Go to Login \n                </Button>\n                <Button\n                  onClick={() => submitForm()}\n                  type=\"submit\"\n                  disabled={isSubmitting || isEmpty(touched) || !isValid}\n                >\n                  Sign up<Icon type=\"right\" />\n                </Button>\n              </div>\n            </form>\n          )}\n      </Formik> \n    </div>\n  );\n}\n\nexport default SignupForm;","import React from 'react';\nimport { useState } from 'react';\nimport { Formik } from 'formik';\nimport { Input, Button, Popconfirm } from 'antd';\nimport { updateNote, createNote, deleteNote } from '../client';\nimport { isEmpty } from '../util.js';\nimport { errorNotification, successNotification } from '../Notification';\n\nconst tagStyle = { \n  color: '#e2231a', \n  marginLeft: '12px',\n  position: 'absolute',\n  left: '27px',\n};\n\n\nconst NoteForm = (props) => {\n\n  const onDelete = () => {\n    deleteNote(props.noteId)\n      .then(() => { \n        props.onCancel();\n        successNotification('Note Deleted');\n        props.onDeleteSuccess();\n      })\n      .catch(err => { errorNotification('Error') })\n  }\n\n  const [fontSize, setFontSize] = useState(17);\n\n  const inc = () => {\n    if (fontSize < 36) {\n      setFontSize(fontSize+1);\n    }\n  }\n\n  const dec = () => {\n    if (fontSize > 10) {\n      setFontSize(fontSize-1);\n    }\n  }\n\n  const reset = () => {\n    setFontSize(17);\n  }\n\n  return (\n    <div className='note_form'>\n      <Formik\n        initialValues={{\n          title: props.title,\n          description: props.description,\n        }}\n        validate={values => {\n          const errors = {};\n\n          if (!values.title) {\n            errors.title = 'title required';\n          } else if (values.title.length > 280) {\n            errors.title = 'title should be shorter than 280 characters';\n          }\n\n          if (!values.description) {\n            errors.description = 'description required';\n          } else if (values.description.length > 11500) {\n            errors.description = 'description should be shorter than 11500 characters';\n          }\n\n          return errors;\n        }}\n        onSubmit={(note, { setSubmitting }) => {\n          if (props.noteId) {\n            // if the component can receive a noteId, then we are modifying an existing note\n            updateNote({ ...note, userId: props.userId, noteId: props.noteId })\n              .then(() => { props.onSuccess(); setSubmitting(false);})\n              .catch(err => { props.onFailure(err); setSubmitting(false);})\n          } else {\n            // else, we are creating a new note\n            createNote({ ...note, userId: props.userId })\n            .then(() => { props.onSuccess(); setSubmitting(false);})\n            .catch(err => { props.onFailure(err); setSubmitting(false);})\n          }\n          \n            // .finally(() => { setSubmitting(false); });\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          submitForm,\n          isValid,\n        }) => (\n            <form onSubmit={handleSubmit} className='inner_form'>\n              <Input\n                // style={inputStyle}\n                name=\"title\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.title}\n                placeholder='please insert title'\n              />\n              {errors.title && touched.title && <span style={{ ...tagStyle, top: '51px' }}>{errors.title}</span>}\n              <Input.TextArea\n                // style={inputStyle}\n                name=\"description\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.description}\n                placeholder='please insert description'\n                style={{fontSize: fontSize + 'px'}}\n              />\n              {errors.description && touched.description && <span style={{ ...tagStyle, top: '658px', width: '300px' }}>{errors.description}</span>}\n              \n              <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\n                {props.noteId && \n                <Popconfirm title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\" onConfirm={onDelete}>\n                  <Button\n                    type='danger'\n                    onClick={() => {}}\n                    style={{ marginRight: '10px' }}\n                  >\n                    Delete\n                  </Button>\n                </Popconfirm>}\n                <Button\n                  onClick={() => submitForm()}\n                  type=\"primary\"\n                  style={{ marginRight: '10px' }}\n                  disabled={isSubmitting || (isEmpty(touched) && !props.noteId) || !isValid}\n                >\n                  {props.noteId? 'Update' : 'Save'}\n                </Button>\n                <Button\n                  onClick={() => props.onCancel()}\n                  style={{ marginRight: '10px' }}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </form>\n          )}\n      </Formik>\n      <Button onClick={dec} className=\"font-btn dec\">-</Button>\n      <Button onClick={reset} className=\"font-btn reset\">reset</Button>\n      <Button type=\"primary\" onClick={inc} className=\"font-btn inc\">+</Button>\n    </div>\n  );\n}\n\nexport default NoteForm;","import React from 'react';\nimport { Formik } from 'formik';\nimport { Input, Button, Popconfirm, DatePicker } from 'antd';\nimport { updateEvent, createEvent, deleteEvent } from '../client';\nimport { isEmpty, momentToString, stringToMoment } from '../util.js';\nimport { errorNotification, successNotification } from '../Notification';\n\nconst tagStyle = {\n  color: '#e2231a',\n  marginLeft: '12px',\n  position: 'absolute',\n  left: '27px',\n};\n\nconst EventForm = (props) => {\n\n  const onDelete = () => {\n    deleteEvent(props.eventId)\n      .then(() => {\n        props.onCancel();\n        successNotification('Event Deleted');\n        props.onDeleteSuccess();\n      })\n      .catch(err => { errorNotification('Error') })\n  }\n\n  // function onTimeOk(value) {\n  //   console.log('onOk: ', value);\n  // }\n\n  return (\n    <div className='event_form'>\n      <Formik\n        initialValues={{\n          name: props.name,\n          time: props.time,\n          description: props.description,\n        }}\n        validate={values => {\n          const errors = {};\n\n          if (!values.name) {\n            errors.name = 'name required';\n          } else if (values.name.length > 280) {\n            errors.name = 'name should be shorter than 280 characters';\n          }\n\n          if (values.description.length > 3800) {\n            errors.description = 'description should be shorter than 3800 characters';\n          }\n\n          if (!values.time) {\n            errors.time = 'event time required';\n          }\n\n          return errors;\n        }}\n        \n        onSubmit={(event, { setSubmitting }) => {\n          if (props.eventId) {\n            // if the component can receive a eventId, then we are modifying an existing event\n            updateEvent({ ...event, userId: props.userId, eventId: props.eventId })\n              .then(() => { props.onSuccess(); setSubmitting(false);})\n              .catch(err => { props.onFailure(err); setSubmitting(false);})\n          } else {\n            // else, we are creating a new event\n            createEvent({ ...event, userId: props.userId })\n            .then(() => { props.onSuccess(); setSubmitting(false);})\n            .catch(err => { props.onFailure(err); setSubmitting(false);})\n          }\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n          submitForm,\n          isValid,\n          setFieldValue\n        }) => {\n\n          const onTimeChange = (obj) => {\n            const str = momentToString(obj);\n            setFieldValue('time', str);\n          }\n\n          const momentObj = stringToMoment(values.time);\n\n          return (\n            <form onSubmit={handleSubmit} className='inner_form'>\n              <Input\n                name=\"name\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.name}\n                placeholder='please insert event name'\n              />\n              {errors.name && touched.name && <span style={{ ...tagStyle, top: '51px' }}>{errors.name}</span>}\n\n              <div className='time_selection'>Event Time: <DatePicker value={momentObj} showTime onChange={onTimeChange} /></div>\n              {errors.time && <span style={{ ...tagStyle, top: '100px' }}>{errors.time}</span>}\n\n              <Input.TextArea\n                name=\"description\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.description}\n                placeholder='please insert description'\n              />\n              {errors.description && touched.description && <span style={{ ...tagStyle, top: '658px', width: '300px' }}>{errors.description}</span>}\n            \n              {/* Buttons */}\n              <div style={{ display: 'flex', flexDirection: 'row-reverse' }}>\n                {props.eventId && \n                <Popconfirm title=\"Are you sure？\" okText=\"Yes\" cancelText=\"No\" onConfirm={onDelete}>\n                  <Button\n                    type='danger'\n                    onClick={() => {}}\n                    style={{ marginRight: '10px' }}\n                  >\n                    Delete\n                  </Button>\n                </Popconfirm>}\n                <Button\n                  onClick={() => submitForm()}\n                  type=\"primary\"\n                  style={{ marginRight: '10px' }}\n                  disabled={isSubmitting || (isEmpty(touched) && !props.eventId) || !isValid}\n                >\n                  {props.eventId? 'Update' : 'Save'}\n                </Button>\n                <Button\n                  onClick={() => props.onCancel()}\n                  style={{ marginRight: '10px' }}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </form>\n          )\n        }}\n      </Formik>\n    </div>\n  );\n}\n\nexport default EventForm;","import React, { Component } from 'react';\nimport './style/meter.scss';\nimport { Popover } from 'antd';\nimport { getEventInRange, stringToMoment } from '../util.js';\nimport moment from 'moment';\n\nclass Meter extends Component {\n\n  render() {\n\n    const targetArray = getEventInRange(this.props.eventArray, this.props.range);\n    const now = moment();\n    const end = moment().add(this.props.range, 'days');\n    const totalSeconds = this.props.range * 86400;\n    const points = [];\n    const startText = now.format('YYYY MMMM DD');\n    const endText = end.format('YYYY MMMM DD');\n\n    for (const event of targetArray) {\n      const m = stringToMoment(event.time);\n      const offset = m.diff(now, 'seconds')\n      const percentage = Math.floor(900 * offset/totalSeconds)/10 + 4;\n\n      points.push(\n        <Popover\n          content={m.format('YYYY MMMM DD, hh:mm:ss')}\n          title={event.name}\n          trigger=\"hover\"\n          placement='bottom'\n          key={event.name}\n        >\n          <div className='point' style={{left: percentage + '%'}}></div>\n        </Popover>\n      );\n    }\n\n    return (\n      <div className='meter'>\n        <h3 className='small_title'>Incomming events in next 30 days</h3>\n        <div className='small_text'>hover on the markers to see detail</div>\n        <div className='axis'>\n          <Popover\n            content={\n              <div>{startText}</div>\n            }\n            title=\"Today\"\n            trigger=\"hover\"\n            placement='bottom'\n          >\n            <div className='start_point'></div>\n          </Popover>\n          {points}\n          <Popover\n            content={\n              <div>{endText}</div>\n            }\n            title=\"30 days later\"\n            trigger=\"hover\"\n            placement='bottom'\n          >\n            <div className='end_point'></div>\n          </Popover>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default Meter;\n\n","import React, { Component } from 'react';\nimport './style/desktop.scss';\nimport { getUserNotes, getUserEvents } from '../client';\nimport { errorNotification, successNotification } from '../Notification';\nimport { Modal, Button, Icon } from 'antd';\nimport NoteForm from './NoteForm';\nimport EventForm from './EventForm';\nimport Meter from './Meter';\nimport { getCookie, compareTimeString } from '../util.js';\n\nclass Desktop extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      noteArray: [],\n      eventArray: [],\n      detailNoteView: false,\n      detailEventView: false,\n      targetNote: null,\n      targetEvent: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAllNotes(this.props.userId);\n    this.fetchAllEvents(this.props.userId);\n  }\n\n  fetchAllNotes = (userId) => {\n    getUserNotes(userId)\n    .then((res) => {\n      return res.json();\n    })\n    .then((noteArray) => {\n      console.log(noteArray);\n      this.setState({ noteArray });\n    })\n    .catch(err => { errorNotification('error', err.error.message) });\n  }\n\n  fetchAllEvents = (userId) => {\n    getUserEvents(userId)\n    .then((res) => {\n      return res.json();\n    })\n    .then((eventArray) => {\n      console.log(eventArray);\n      this.setState({ eventArray });\n    })\n    .catch(err => { errorNotification('error', err.error.message) });\n  }\n\n  renderNoteArray = (noteArray) => {\n    if (noteArray.length === 0) {\n      return <span className='chalkboard_font empty_msg'>No Notes</span>\n    } else {\n      return noteArray.map((note) => {\n        return (\n          <div \n            note_id={note.noteId} \n            key={note.noteId} \n            onClick={this.openDetailNoteView.bind(this, note.noteId)}\n            className='note_cell'\n          >\n            <div className='title'>{note.title}</div>\n            <div className='description'>{note.description}</div>\n          </div>\n        )\n      });\n    }\n  }\n\n  openDetailNoteView = (noteId) => {\n    const target = this.getNoteInfoById(this.state.noteArray, noteId);\n    if (target) {\n      this.setState({\n        detailNoteView: true,\n        targetNote: target\n      });\n    } else {\n      console.log('can not get note with id ' + noteId);\n    }\n  }\n\n  openDetailEventView = (eventId) => {\n    const target = this.getEventInfoById(this.state.eventArray, eventId);\n    if (target) {\n      this.setState({\n        detailEventView: true,\n        targetEvent: target\n      });\n    } else {\n      console.log('can not get event with id ' + eventId);\n    }\n  }\n\n  getNoteInfoById = (noteArray, noteId) => {\n    const target = noteArray.filter(o => o.noteId === noteId);\n    if (target.length > 0) return target[0];\n    return null;\n  }\n\n  getEventInfoById = (eventArray, eventId) => {\n    const target = eventArray.filter(o => o.eventId === eventId);\n    if (target.length > 0) return target[0];\n    return null;\n  }\n\n  onAddNewNote = () => {\n    this.setState({\n      target: null,\n      targetNote: null,\n      detailNoteView: true,\n    });\n  }\n\n  onAddNewEvent = () => {\n    this.setState({\n      target: null,\n      targetEvent: null,\n      detailEventView: true,\n    });\n  }\n\n  renderEventArray = (eventArray) => {\n    if (eventArray.length === 0) {\n      return <span className='chalkboard_font empty_msg'>No Events</span>\n    } else {\n      eventArray.sort(compareTimeString);\n      return eventArray.map((event) => {\n        return (\n          <div \n            event_id={event.eventId} \n            key={event.eventId} \n            onClick={this.openDetailEventView.bind(this, event.eventId)}\n            className='event_cell'\n          >\n            <div className='name'>{event.name}</div>\n            <div>{event.time}</div>\n            {/* <div className='description'>{event.description}</div> */}\n          </div>\n        )\n      });\n    }\n  }\n\n  render() {\n    const notes = this.renderNoteArray(this.state.noteArray);\n    const events = this.renderEventArray(this.state.eventArray);\n    const userName = getCookie('user_name');\n\n    return (\n      <div className='desktop'>\n        <h1 className='big_title'>Hello, {userName}</h1>\n        <Button type='primary' onClick={() => this.props.onLogout()}><Icon type=\"left\" />log out</Button>\n\n        <h1 className='big_title'>Notes</h1>\n        <Button type='primary' onClick={() => this.onAddNewNote()}><Icon type=\"plus-circle\" />Add New Note</Button>\n        <div className='note_container'>{notes}</div>\n\n\n        <h1 className='big_title'>Events</h1>\n        <Button type='primary' onClick={() => this.onAddNewEvent()}><Icon type=\"plus-circle\" />Add New Event</Button>\n        <Meter eventArray={this.state.eventArray} range={30}></Meter>\n        <div className='note_container'>{events}</div>\n\n        {/* note Modal */}\n        <Modal\n          visible={this.state.detailNoteView}\n          footer={null}\n          closable={false}\n          width={600}\n          wrapClassName='note_modal'\n        >\n          <NoteForm \n            key={Math.random()}\n            title={this.state.targetNote ? this.state.targetNote.title : ''}\n            description={this.state.targetNote ? this.state.targetNote.description : ''}\n            userId={this.props.userId}\n            noteId={this.state.targetNote ? this.state.targetNote.noteId : ''}\n            onSuccess={() => {\n              this.fetchAllNotes(this.props.userId);\n              successNotification('Note updated');\n              this.setState({\n                detailNoteView: false,\n                targetNote: null\n              });\n            }}\n            onFailure={(error) => {\n              errorNotification('Error')\n            }}\n            onDeleteSuccess={() => {\n              this.fetchAllNotes(this.props.userId);\n              this.setState({\n                detailNoteView: false,\n                targetNote: null\n              });\n            }}\n            onCancel={() => {\n              this.setState({\n                detailNoteView: false,\n                targetNote: null\n              });\n            }}\n          />\n        </Modal>\n\n\n        {/* event Modal */}\n        <Modal\n          visible={this.state.detailEventView}\n          footer={null}\n          closable={false}\n          width={600}\n          wrapClassName='event_modal'\n        >\n          <EventForm\n            key={Math.random()}\n            name={this.state.targetEvent ? this.state.targetEvent.name : ''}\n            time={this.state.targetEvent ? this.state.targetEvent.time : ''}\n            description={this.state.targetEvent ? this.state.targetEvent.description : ''}\n            userId={this.props.userId}\n            eventId={this.state.targetEvent ? this.state.targetEvent.eventId : ''}\n            onSuccess={() => {\n              this.fetchAllEvents(this.props.userId);\n              successNotification('Event updated');\n              this.setState({\n                detailEventView: false,\n                targetEvent: null\n              });\n            }}\n            onFailure={(error) => {\n              errorNotification('Error')\n            }}\n            onDeleteSuccess={() => {\n              this.fetchAllEvents(this.props.userId);\n              this.setState({\n                detailEventView: false,\n                targetEvent: null\n              });\n            }}\n            onCancel={() => {\n              this.setState({\n                detailEventView: false,\n                targetEvent: null\n              });\n            }}\n          />\n        </Modal>\n      </div>\n    );\n  }\n\n}\nexport default Desktop;","import React, { Component } from 'react';\nimport './style/index.scss';\nimport LoginForm from './LoginForm';\nimport { successNotification, errorNotification } from '../Notification';\nimport SignupForm from './SignupForm';\nimport Desktop from './Desktop';\nimport { getCookie } from '../util.js';\nimport { checkToken } from '../client.js';\n\nclass NoteManagement extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentStage: 'LOGIN',\n      userId: '',\n    };\n  }\n\n  componentDidMount() {\n    const jwt = getCookie('jwt_token');\n    const userName = getCookie('user_name');\n    const userId = getCookie('user_id');\n\n    if (jwt && userName && userId) {\n\n      checkToken(userName, jwt)\n      .then(() => {\n        this.setState({ userId: userId });\n        successNotification('Login successful', 'Welcom back ' + userName);\n        this.switchToStage('DESKTOP')();\n      })\n      .catch(err => { this.onLogout() });\n    }\n  }\n\n  onLoginSucc = (o) => {\n    o.json().then((userInfo) => {\n\n      // store user info as cookie\n      document.cookie = `jwt_token=${userInfo.jwt}`;\n      document.cookie = `user_name=${userInfo.name}`;\n      document.cookie = `user_id=${userInfo.userId}`;\n\n      this.setState({ userId: userInfo.userId });\n      successNotification('Login successful', 'Welcom back' + userInfo.name);\n      this.switchToStage('DESKTOP')();\n    })\n    .catch(() => {errorNotification('Login failed', 'invalid user')});\n  }\n\n  onLoginFail = (e) => {\n    errorNotification('Login failed', e.error.message);\n  }\n\n  onSignupSucc = () => {\n    successNotification('Sign up successful', 'Please log in');\n    this.switchToStage('LOGIN')();\n  }\n\n  onSignupFail = (e) => {\n    console.log(e,e.error)\n    errorNotification('Sign up failed', e.error.message);\n  }\n\n  switchToStage = nextStage => () => {\n    this.setState({\n      currentStage: nextStage,\n    });\n  }\n\n  onLogout = () => {\n    // remove all the cookies\n    document.cookie = \"jwt_token= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n    document.cookie = \"user_name= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n    document.cookie = \"user_id= ; expires = Thu, 01 Jan 1970 00:00:00 GMT\";\n\n    this.setState({\n      currentStage: 'LOGIN',\n      userId: '',\n    });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className='note_management'>\n          {this.state.currentStage === 'LOGIN' \n            && \n            <LoginForm \n              onSuccess={this.onLoginSucc} \n              onFailure={this.onLoginFail}\n              OnSitchToSignup={this.switchToStage('SIGNUP')}\n            />}\n\n          {this.state.currentStage === 'SIGNUP' \n            && \n            <SignupForm \n              onSuccess={this.onSignupSucc} \n              onFailure={this.onSignupFail}\n              OnSitchToLogin={this.switchToStage('LOGIN')}\n            />}\n          {this.state.currentStage === 'DESKTOP'\n          &&\n          <Desktop \n            userId={this.state.userId}\n            onLogout={this.onLogout}\n          />}\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default NoteManagement;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport 'antd/dist/antd.css';\nimport NoteManagement from './noteManagement/index';\n\nReactDOM.render(<div className='main'><NoteManagement /></div>, document.getElementById('root'));\n\ndocument.title = 'Note';\n"],"sourceRoot":""}